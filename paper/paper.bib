@software{JupyterBook,
  author       = {Executable Books Community},
  title        = {Jupyter Book},
  month        = feb,
  year         = 2021,
  publisher    = {Zenodo},
  version      = {v0.10},
  doi          = {10.5281/zenodo.4539666},
  url          = {https://doi.org/10.5281/zenodo.4539666}
}

@misc{JupyterBookMyst,
  author       = {Holdgraf, Chris and
                  The Executable Books Community},
  title        = {{Jupyter Book and MyST: A community-led, 
                   extensible, modular ecosystem for creating
                   computational narratives}},
  month        = nov,
  year         = 2022,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.7287626},
  url          = {https://doi.org/10.5281/zenodo.7287626}
}

@ARTICLE{EDAssistant,
  title     = "{EDAssistant}: Supporting Exploratory Data Analysis in
               Computational Notebooks with In Situ Code Search and
               Recommendation",
  author    = "Li, Xingjun and Zhang, Yizhi and Leung, Justin and Sun,
               Chengnian and Zhao, Jian",
  abstract  = "Using computational notebooks (e.g., Jupyter Notebook), data
               scientists rationalize their exploratory data analysis (EDA)
               based on their prior experience and external knowledge, such as
               online examples. For novices or data scientists who lack
               specific knowledge about the dataset or problem to investigate,
               effectively obtaining and understanding the external information
               is critical to carrying out EDA. This article presents
               EDAssistant, a JupyterLab extension that supports EDA with in
               situ search of example notebooks and recommendation of useful
               APIs, powered by novel interactive visualization of search
               results. The code search and recommendation are enabled by
               advanced machine learning models, trained on a large corpus of
               EDA notebooks collected online. A user study is conducted to
               investigate both EDAssistant and data scientists' current
               practice (i.e., using external search engines). The results
               demonstrate the effectiveness and usefulness of EDAssistant, and
               participants appreciated its smooth and in-context support of
               EDA. We also report several design implications regarding code
               recommendation tools.",
  journal   = "ACM Trans. Interact. Intell. Syst.",
  publisher = "Association for Computing Machinery",
  volume    =  13,
  number    =  1,
  pages     = "1--27",
  month     =  mar,
  year      =  2023,
  address   = "New York, NY, USA",
  keywords  = "computational notebooks, code search, software visualization,
               Exploratory data analysis",
  doi={10.1145/3545995}
}

% The entry below contains non-ASCII chars that could not be converted
% to a LaTeX equivalent.
@ARTICLE{Zhao2022,
  title     = "{Notebook‐as‐a‐VRE} ({NaaVRE)}: From private notebooks to a
               collaborative cloud virtual research environment",
  author    = "Zhao, Zhiming and Koulouzis, Spiros and Bianchi, Riccardo and
               Farshidi, Siamak and Shi, Zeshun and Xin, Ruyue and Wang,
               Yuandou and Li, Na and Shi, Yifang and Timmermans, Joris and
               Kissling, W Daniel",
  abstract  = "Abstract Virtual research environments (VREs) provide
               user-centric support in the lifecycle of research activities,
               for example, discovering and accessing research assets or
               composing and executing application workflows. A typical VRE is
               often implemented as an integrated environment, including a
               catalog of research assets, a workflow management system, a data
               management framework, and tools for enabling user collaboration.
               In contrast, notebook environments like Jupyter allow
               researchers to rapidly prototype scientific code and share their
               experiments as online accessible notebooks. Jupyter can support
               several popular languages used by data scientists, such as
               Python, R, and Julia. However, such notebook environments do not
               have seamless support for running heavy computations on remote
               infrastructure or finding and accessing collaborative software
               code inside notebooks. This article investigates the gap between
               a notebook environment and a VRE and proposes an embedded VRE
               solution for the Jupyter environment called Notebook-as-a-VRE
               (NaaVRE). The NaaVRE solution provides functional components via
               a component marketplace and allows users to create a customized
               VRE on top of the Jupyter environment. From the VRE, a user can
               search research assets (data, software, and algorithms), compose
               workflows, manage the lifecycle of an experiment, and share the
               results among users in the community. We demonstrate how such a
               solution can enhance a legacy workflow that uses Light Detection
               and Ranging (LiDAR) data from country-wide airborne laser
               scanning surveys for deriving geospatial data products of
               ecosystem structure at high resolution over broad spatial
               extents. This enables users to scale out the processing of
               multi-terabyte LiDAR point clouds for ecological applications to
               more data sources in a distributed cloud environment. Similar
               applications could be developed for workflows producing other
               essential biodiversity variables.",
  journal   = "Softw. Pract. Exp.",
  publisher = "Wiley",
  volume    =  52,
  number    =  9,
  pages     = "1947--1966",
  month     =  sep,
  year      =  2022,
  copyright = "http://creativecommons.org/licenses/by-nc/4.0/",
  language  = "en",
  doi={10.1002/spe.3098}
}

@INPROCEEDINGS{Wang2023,
  title     = "{Slide4N}: Creating Presentation Slides from Computational
               Notebooks with {Human-AI} Collaboration",
  booktitle = "Proceedings of the 2023 {CHI} Conference on Human Factors in
               Computing Systems",
  author    = "Wang, Fengjie and Liu, Xuye and Liu, Oujing and Neshati, Ali and
               Ma, Tengfei and Zhu, Min and Zhao, Jian",
  abstract  = "Data scientists often have to use other presentation tools
               (e.g., Microsoft PowerPoint) to create slides to communicate
               their analysis obtained using computational notebooks. Much
               tedious and repetitive work is needed to transfer the routines
               of notebooks (e.g., code, plots) to the presentable contents on
               slides (e.g., bullet points, figures). We propose a human-AI
               collaborative approach and operationalize it within Slide4N, an
               interactive AI assistant for data scientists to create slides
               from computational notebooks. Slide4N leverages advanced natural
               language processing techniques to distill key information from
               user-selected notebook cells and then renders them in
               appropriate slide layouts. The tool also provides intuitive
               interactions that allow further refinement and customization of
               the generated slides. We evaluated Slide4N with a two-part user
               study, where participants appreciated this human-AI
               collaborative approach compared to fully-manual or
               fully-automatic methods. The results also indicate the
               usefulness and effectiveness of Slide4N in slide creation tasks
               from notebooks.",
  publisher = "Association for Computing Machinery",
  number    = "Article 364",
  pages     = "1--18",
  series    = "CHI '23",
  month     =  apr,
  year      =  2023,
  address   = "New York, NY, USA",
  keywords  = "computational notebooks, data science., human-AI collaboration,
               natural language processing, slides generation",
  doi={10.1145/3544548.3580753}
}

@INPROCEEDINGS{Drosos2020,
  title     = "Wrex: A Unified {Programming-by-Example} Interaction for
               Synthesizing Readable Code for Data Scientists",
  booktitle = "Proceedings of the 2020 {CHI} Conference on Human Factors in
               Computing Systems",
  author    = "Drosos, Ian and Barik, Titus and Guo, Philip J and DeLine,
               Robert and Gulwani, Sumit",
  abstract  = "Data wrangling is a difficult and time-consuming activity in
               computational notebooks, and existing wrangling tools do not fit
               the exploratory workflow for data scientists in these
               environments. We propose a unified interaction model based on
               programming-by-example that generates readable code for a
               variety of useful data transformations, implemented as a Jupyter
               notebook extension called Wrex. User study results demonstrate
               that data scientists are significantly more effective and
               efficient at data wrangling with Wrex over manual programming.
               Qualitative participant feedback indicates that Wrex was useful
               and reduced barriers in having to recall or look up the usage of
               various data transform functions. The synthesized code allowed
               data scientists to verify the intended data transformation,
               increased their trust and confidence in Wrex, and fit seamlessly
               within their cell-based notebook workflows. This work suggests
               that presenting readable code to professional data scientists is
               an indispensable component of offering data wrangling tools in
               notebooks.",
  publisher = "Association for Computing Machinery",
  pages     = "1--12",
  series    = "CHI '20",
  month     =  apr,
  year      =  2020,
  address   = "New York, NY, USA",
  keywords  = "computational notebooks, data science, program synthesis",
  doi={10.1145/3313831.3376442}
}

@INPROCEEDINGS{Li2023,
  title     = "Notable: On-the-fly Assistant for Data Storytelling in
               Computational Notebooks",
  booktitle = "Proceedings of the 2023 {CHI} Conference on Human Factors in
               Computing Systems",
  author    = "Li, Haotian and Ying, Lu and Zhang, Haidong and Wu, Yingcai and
               Qu, Huamin and Wang, Yun",
  abstract  = "Computational notebooks are widely used for data analysis. Their
               interleaved displays of code and execution results (e.g.,
               visualizations) are welcomed since they enable iterative
               analysis and preserve the exploration process. However, the
               communication of data findings remains challenging in
               computational notebooks. Users have to carefully identify useful
               findings from useless ones, document them with texts and visual
               embellishments, and then organize them in different tools. Such
               workflow greatly increases their workload, according to our
               interviews with practitioners. To address the challenge, we
               designed Notable to offer on-the-fly assistance for data
               storytelling in computational notebooks. It provides intelligent
               support to minimize the work of documenting and organizing data
               findings and diminishes the cost of switching between data
               exploration and storytelling. To evaluate Notable, we conducted
               a user study with 12 data workers. The feedback from user study
               participants verifies its effectiveness and usability.",
  publisher = "Association for Computing Machinery",
  number    = "Article 173",
  pages     = "1--16",
  series    = "CHI '23",
  month     =  apr,
  year      =  2023,
  address   = "New York, NY, USA",
  keywords  = "computational notebooks, data storytelling, data visualization",
  doi={10.1145/3544548.3580965}
}

@INPROCEEDINGS{Jain2022,
  title     = "Jigsaw: large language models meet program synthesis",
  booktitle = "Proceedings of the 44th International Conference on Software
               Engineering",
  author    = "Jain, Naman and Vaidyanath, Skanda and Iyer, Arun and Natarajan,
               Nagarajan and Parthasarathy, Suresh and Rajamani, Sriram and
               Sharma, Rahul",
  abstract  = "Large pre-trained language models such as GPT-3 [10], Codex
               [11], and Google's language model [7] are now capable of
               generating code from natural language specifications of
               programmer intent. We view these developments with a mixture of
               optimism and caution. On the optimistic side, such large
               language models have the potential to improve productivity by
               providing an automated AI pair programmer for every programmer
               in the world. On the cautionary side, since these large language
               models do not understand program semantics, they offer no
               guarantees about quality of the suggested code. In this paper,
               we present an approach to augment these large language models
               with post-processing steps based on program analysis and
               synthesis techniques, that understand the syntax and semantics
               of programs. Further, we show that such techniques can make use
               of user feedback and improve with usage. We present our
               experiences from building and evaluating such a tool Jigsaw,
               targeted at synthesizing code for using Python Pandas API using
               multi-modal inputs. Our experience suggests that as these large
               language models evolve for synthesizing code from intent, Jigsaw
               has an important role to play in improving the accuracy of the
               systems.",
  publisher = "Association for Computing Machinery",
  pages     = "1219--1231",
  series    = "ICSE '22",
  month     =  jul,
  year      =  2022,
  address   = "New York, NY, USA",
  location  = "Pittsburgh, Pennsylvania",
  doi={10.1145/3510003.3510203}
}

@ARTICLE{Wang2022,
  title         = "{NOVA}: A Practical Method for Creating {Notebook-Ready}
                   Visual Analytics",
  author        = "Wang, Zijie J and Munechika, David and Lee, Seongmin and
                   Chau, Duen Horng",
  abstract      = "How can we develop visual analytics (VA) tools that can be
                   easily adopted? Visualization researchers have developed a
                   large number of web-based VA tools to help data scientists
                   in a wide range of tasks. However, adopting these standalone
                   systems can be challenging, as they require data scientists
                   to create new workflows to streamline the VA processes.
                   Recent surveys suggest computational notebooks have been
                   dominating data scientists' analytical workflows, as these
                   notebooks seamlessly combine text, code, and visualization,
                   allowing users to rapidly iterate code experiments. To help
                   visualization researchers develop VA tools that can be
                   easily integrated into existing data science workflows, we
                   present NOVA, a simple and flexible method to adapt
                   web-based VA systems for notebooks. We provide detailed
                   examples of using this method with diverse web development
                   technologies and different types of computational notebooks.
                   Deployed application examples highlight that NOVA is easy to
                   adopt, and data scientists appreciate in-notebook VA. NOVA
                   is available at https://github.com/poloclub/nova.",
  month         =  may,
  year          =  2022,
  archivePrefix = "arXiv",
  primaryClass  = "cs.HC",
  eprint        = "2205.03963",
  doi={10.48550/arXiv.2205.03963}
}

@INPROCEEDINGS{Wang2024,
  title     = "{SuperNOVA}: Design Strategies and Opportunities for Interactive
               Visualization in Computational Notebooks",
  booktitle = "Extended Abstracts of the 2024 {CHI} Conference on Human Factors
               in Computing Systems",
  author    = "Wang, Zijie J and Munechika, David and Lee, Seongmin and Chau,
               Duen Horng",
  abstract  = "Computational notebooks, such as Jupyter Notebook, have become
               data scientists' de facto programming environments. Many
               visualization researchers and practitioners have developed
               interactive visualization tools that support notebooks, yet
               little is known about the appropriate design of these tools. To
               address this critical research gap, we investigate the design
               strategies in this space by analyzing 163 notebook visualization
               tools. Our analysis encompasses 64 systems from academic papers
               and 105 systems sourced from a pool of 55k notebooks containing
               interactive visualizations that we obtain via scraping 8.6
               million notebooks on GitHub. Through this study, we identify key
               design implications and trade-offs, such as leveraging
               multimodal data in notebooks as well as balancing the degree of
               visualization-notebook integration. Furthermore, we provide
               empirical evidence that tools compatible with more notebook
               platforms have a greater impact. Finally, we develop SuperNOVA,
               an open-source interactive browser to help researchers explore
               existing notebook visualization tools. SuperNOVA is publicly
               accessible at: https://poloclub.github.io/supernova/.",
  publisher = "Association for Computing Machinery",
  number    = "Article 304",
  pages     = "1--17",
  series    = "CHI EA '24",
  month     =  may,
  year      =  2024,
  address   = "New York, NY, USA",
  keywords  = "Computational Notebook, Cross-Platform Visualization, Data
               Science, Design, Interactive Visualization, Systematic Review",
  doi={10.1145/3613905.3650848}
}

@INPROCEEDINGS{Kluyver2016,
  title      = "Jupyter Notebooks -- a publishing format for reproducible
                computational workflows",
  booktitle  = "Positioning and Power in Academic Publishing: Players, Agents
                and Agendas",
  author     = "Kluyver, Thomas and Ragan-Kelley, Benjamin and P{\'e}rez,
                Fernando and Granger, Brian and Bussonnier, Matthias and
                Frederic, Jonathan and Kelley, Kyle and Hamrick, Jessica and
                Grout, Jason and Corlay, Sylvain and Ivanov, Paul and Avila,
                Dami{\'a}n and Abdalla, Safia and Willing, Carol",
  editor     = "Loizides, Fernando and Scmidt, Birgit",
  abstract   = "It is increasingly necessary for researchers in all fields to
                write computer code, and in order to reproduce research
                results, it is important that this code is published. We
                present Jupyter notebooks, a document format for publishing
                code, results and explanations in a form that is both readable
                and executable. We discuss various tools and use cases for
                notebook documents.",
  publisher  = "IOS Press",
  pages      = "87--90",
  year       =  2016,
  language   = "en",
  conference = "20th International Conference on Electronic Publishing
                (01/01/16)",
  doi={10.3233/978-1-61499-649-1-87}
}

@ARTICLE{Perez2007,
  title     = "{IPython}: A System for Interactive Scientific Computing",
  author    = "Perez, Fernando and Granger, Brian E",
  abstract  = "Python offers basic facilities for interactive work and a
               comprehensive library on top of which more sophisticated systems
               can be built. The IPython project provides on enhanced
               interactive environment that includes, among other features,
               support for data visualization and facilities for distributed
               and parallel computation",
  journal   = "Comput. Sci. Eng.",
  publisher = "IEEE",
  volume    =  9,
  number    =  3,
  pages     = "21--29",
  year      =  2007,
  doi={10.1109/MCSE.2007.53}
}

@ARTICLE{Granger2021,
  title     = "Jupyter: Thinking and Storytelling With Code and Data",
  author    = "Granger, Brian E and P{\'e}rez, Fernando",
  abstract  = "Project Jupyter is an open-source project for interactive
               computing widely used in data science, machine learning, and
               scientific computing. We argue that even though Jupyter helps
               users perform complex, technical work, Jupyter itself solves
               problems that are fundamentally human in nature. Namely, Jupyter
               helps humans to think and tell stories with code and data. We
               illustrate this by describing three dimensions of Jupyter: 1)
               interactive computing; 2) computational narratives; and 3) the
               idea that Jupyter is more than software. We illustrate the
               impact of these dimensions on a community of practice in earth
               and climate science.",
  journal   = "Comput. Sci. Eng.",
  publisher = "IEEE",
  volume    =  23,
  number    =  2,
  pages     = "7--14",
  year      =  2021,
  doi={10.22541/au.161298309.98344404/v3}
}

@ARTICLE{Heer2024,
  title    = "Mosaic: An Architecture for Scalable \& Interoperable Data Views",
  author   = "Heer, Jeffrey and Moritz, Dominik",
  abstract = "Mosaic is an architecture for greater scalability, extensibility,
              and interoperability of interactive data views. Mosaic decouples
              data processing from specification logic: clients publish their
              data needs as declarative queries that are then managed and
              automatically optimized by a coordinator that proxies access to a
              scalable data store. Mosaic generalizes Vegalite's selection
              abstraction to enable rich integration and linking across
              visualizations and components such as menus, text search, and
              tables. We demonstrate Mosaic's expressiveness, extensibility,
              and interoperability through examples that compose diverse
              visualization, interaction, and optimization techniques-many
              constructed using vgplot, a grammar of interactive graphics in
              which graphical marks act as Mosaic clients. To evaluate
              scalability, we present benchmark studies with order-of-magnitude
              performance improvements over existing web-based visualization
              systems-enabling flexible, real-time visual exploration of
              billion+ record datasets. We conclude by discussing Mosaic's
              potential as an open platform that bridges visualization
              languages, scalable visualization, and interactive data systems
              more broadly.",
  journal  = "IEEE Trans. Vis. Comput. Graph.",
  volume   =  30,
  number   =  1,
  pages    = "436--446",
  month    =  jan,
  year     =  2024,
  language = "en",
  doi={10.1109/TVCG.2023.3327189}
}

@ARTICLE{Ouyang2019,
  title    = "{ImJoy}: an open-source computational platform for the deep
              learning era",
  author   = "Ouyang, Wei and Mueller, Florian and Hjelmare, Martin and
              Lundberg, Emma and Zimmer, Christophe",
  journal  = "Nat. Methods",
  volume   =  16,
  number   =  12,
  pages    = "1199--1200",
  month    =  dec,
  year     =  2019,
  language = "en",
  doi={10.1038/s41592-019-0627-0}
}

@misc{voila,
  author = {QuantStack},
  title = {And Voilà!},
  year = {2019},
  url = {https://blog.jupyter.org/and-voil%C3%A0-f6a2c08a4a93},
  note = {Jupyter Blog, Accessed: 2024-06-05}
}

@misc{nbconvert,
  author = {Jupyter Project},
  title = {nbconvert},
  year = {2024},
  url = {https://github.com/jupyter/nbconvert},
  note = {Accessed: 2024-06-05}
}

@article{jscatter,
  title = {{Jupyter Scatter}: Interactive Exploration of Large-Scale Datasets},
  author = {Fritz Lekschas and Trevor Manz},
  journal = {Journal of Open Source Software},
  publisher = {The Open Journal},
  year = {2024},
  volume = {9},
  number = {101},
  pages = {7059},
  doi = {10.21105/joss.07059},
  url = {https://doi.org/10.21105/joss.07059},
}

@ARTICLE{gos,
  title    = "Gos: a declarative library for interactive genomics visualization
              in Python",
  author   = "Manz, Trevor and L'Yi, Sehi and Gehlenborg, Nils",
  abstract = "SUMMARY: Gos is a declarative Python library designed to create
              interactive multiscale visualizations of genomics and epigenomics
              data. It provides a consistent and simple interface to the
              flexible Gosling visualization grammar. Gos hides technical
              complexities involved with configuring web-based genome browsers
              and integrates seamlessly within computational notebooks
              environments to enable new interactive analysis workflows.
              AVAILABILITY AND IMPLEMENTATION: Gos is released under the MIT
              License and available on the Python Package Index (PyPI). The
              source code is publicly available on GitHub
              (https://github.com/gosling-lang/gos), and documentation with
              examples can be found at https://gosling-lang.github.io/gos.",
  journal  = "Bioinformatics",
  volume   =  39,
  number   =  1,
  month    =  jan,
  year     =  2023,
  language = "en",
  doi={10.1093/bioinformatics/btad050}
}


@UNPUBLISHED{vitessce,
  title    = "Vitessce: a framework for integrative visualization of
              multi-modal and spatially-resolved single-cell data",
  author   = "Keller, Mark S and Gold, Ilan and McCallum, Chuck and Manz,
              Trevor and Kharchenko, Peter V and Gehlenborg, Nils",
  abstract = "Vitessce is an open-source interactive visualization framework
              for exploration of multi-modal and spatially-resolved single-cell
              data, with a modular architecture compatible with transcriptomic,
              proteomic, genome-mapped, and imaging data types. Its modular,
              coordinated multiple view implementation facilitates a wide range
              of visualization tasks to support all common single-cell assays.
              Vitessce is a client-side web application designed to be
              integrated with computational analysis tools and data resources
              and does not require specialized server infrastructure. The
              software is available at http://vitessce.io.",
  journal  = "OSF Preprints",
  month    =  oct,
  year     =  2021,
  keywords = "bioimaging; bioinformatics; data visualization; single-cell;
              spatial omics; visualization",
  doi={10.31219/osf.io/y8thv}
}

@ARTICLE{viv,
  title    = "Viv: multiscale visualization of high-resolution multiplexed
              bioimaging data on the web",
  author   = "Manz, Trevor and Gold, Ilan and Patterson, Nathan Heath and
              McCallum, Chuck and Keller, Mark S and Herr, 2nd, Bruce W and
              B{\"o}rner, Katy and Spraggins, Jeffrey M and Gehlenborg, Nils",
  journal  = "Nat. Methods",
  volume   =  19,
  number   =  5,
  pages    = "515--516",
  month    =  may,
  year     =  2022,
  language = "en",
  doi={10.1038/s41592-022-01482-7}
}

@misc{lonboard,
  author = {Kyle Barron},
  title = {Lonboard},
  year = {2024},
  url = {https://github.com/developmentseed/lonboard},
  note = {Accessed: 2024-06-05}
}

@INPROCEEDINGS{ipyaladin,
       author = {{Boch}, Thomas and {Desroziers}, J{\'e}r{\^o}me},
        title = "{ipyaladin: Enabling Aladin Lite in Jupyter Notebooks}",
    booktitle = {Astronomical Data Analysis Software and Systems XXVII},
         year = 2020,
       editor = {{Ballester}, Pascal and {Ibsen}, Jorge and {Solar}, Mauricio and {Shortridge}, Keith},
       series = {Astronomical Society of the Pacific Conference Series},
       volume = {522},
        month = apr,
        pages = {117},
}

@misc{drawdata,
  author = {Vincent D. Warmerdam},
  title = {drawdata},
  year = {2024},
  url = {https://github.com/koaning/drawdata},
  note = {Accessed: 2024-06-05}
}

@misc{anyhtmlwidget,
  author = {Mark S. Keller},
  title = {anyhtmlwidget},
  year = {2024},
  url = {https://github.com/keller-mark/anyhtmlwidget},
  note = {Accessed: 2024-06-05}
}

@ARTICLE{altair,
  title     = "Altair: Interactive statistical visualizations for python",
  author    = "VanderPlas, Jacob and Granger, Brian and Heer, Jeffrey and
               Moritz, Dominik and Wongsuphasawat, Kanit and Satyanarayan,
               Arvind and Lees, Eitan and Timofeev, Ilia and Welsh, Ben and
               Sievert, Scott",
  journal   = "J. Open Source Softw.", publisher = "The Open Journal",
  volume    =  3,
  number    =  32,
  pages     = "1057",
  month     =  dec,
  year      =  2018,
  copyright = "http://creativecommons.org/licenses/by/4.0/",
  doi={10.21105/joss.01057}
}

@misc{scipy,
 title={Any notebook served: authoring and sharing reusable interactive widgets},
 url={osf.io/pyn7u},
 DOI={10.31219/osf.io/pyn7u},
 publisher={OSF Preprints},
 author={Manz, Trevor and Gehlenborg, Nils and Abdennur, Nezar},
 year={2024},
 month={Jun}
}

@misc{ipywidgets,
  author = {Jason Grout and Jonathan Frederic and Sylvain Corlay and et al.},
  title = {ipywidgets: Interactive widgets for the Jupyter Notebook},
  year = {2024},
  url = {https://github.com/jupyter-widgets/ipywidgets},
  note = {Accessed: 2024-06-05}
}

@misc{marimo,
  author = {Akshay Agrawal and Myles Scolnick},
  title = {marimo},
  year = {2024},
  url = {https://github.com/marimo-team/marimo},
  note = {Accessed: 2024-06-05}
}

@software{panel,
  author       = {Philipp Rudiger and
                  Marc Skov Madsen and
                  Simon Høxbro Hansen and
                  Maxime Liquet and
                  Andrew and
                  Xavier Artusi and
                  James A. Bednar and
                  Chris B and
                  Jean-Luc Stevens and
                  Julia Signell and
                  Demetris Roumis and
                  Christoph Deil and
                  Mateusz Paprocki and
                  Jerry Wu and
                  Jon Mease and
                  Arne and
                  thuydotm and
                  Hugues-Yanis Amanieu and
                  Coderambling and
                  Simon and
                  sdc50 and
                  Govinda Totla and
                  Joel Ostblom and
                  Theom and
                  kbowen and
                  Luca Fabbri and
                  Niko Föhr and
                  TBym},
  title        = {holoviz/panel: Version 1.4.4},
  month        = may,
  year         = 2024,
  publisher    = {Zenodo},
  version      = {v1.4.4},
  doi          = {10.5281/zenodo.11403810},
  url          = {https://doi.org/10.5281/zenodo.11403810}
}

@article{cev,
 title={A General Framework for Comparing Embedding Visualizations Across Class-Label Hierarchies},
 url={osf.io/puxnf},
 DOI={10.31219/osf.io/puxnf},
 publisher={OSF Preprints},
 author={Manz, Trevor and Lekschas, Fritz and Greene, Evan and Finak, Greg and Gehlenborg, Nils},
 year={2024},
 month={Apr}
}

@misc{ecma,
  author={Shu-yu Guo and Michael Ficarra and Kevin Gibbons and ECMAScript community},
  title="{ECMAScript® 2023 Language Specification}",
  year=2023,
  edition="14th",
  month= jun,
  url="https://262.ecma-international.org/14.0/",
  section={16.2},
  notes="Accessed 2024-06-07"
}
